name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  MAVEN_CLI_OPTS: "-B -DskipTests"
  DOCKER_HOST: tcp://localhost:2375

jobs:
  # Install job
  maven_install:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Set up Maven
        uses: actions/setup-java@v2
        with:
          maven-version: '3.9.9'
          java-version: '21'
          distribution: 'corretto'

      - name: Install Maven dependencies
        run: mvn ${{ env.MAVEN_CLI_OPTS }} -DAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -DAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -DDOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }} -DCI_COMMIT_SHA=${{ github.sha }} install

  # Deploy job
  deploy-dev:
    runs-on: ubuntu-latest
    needs: maven_install
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""
    env:
      API_STACK_CDK_NAME: BackendServiceStack
      API_GW_STACK_CDK_NAME: ApiGwStack
      API_STACK_NAME: dev-backend-service
      API_ENVIRONMENT: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install esbuild
        run: npm i -D esbuild

      - name: Deploy Backend Service Stack
        run: npm run cdk -- deploy ${{ env.API_STACK_CDK_NAME }} --context environment=${{ env.API_ENVIRONMENT }} --require-approval never --parameters ${{ env.API_STACK_NAME }}:ImageTag=${{ github.sha }}

      - name: Deploy API Gateway Stack
        run: npm run cdk -- deploy ${{ env.API_GW_STACK_CDK_NAME }} --context environment=${{ env.API_ENVIRONMENT }} --require-approval never --parameters ${{ env.API_STACK_NAME }}:ImageTag=${{ github.sha }}
