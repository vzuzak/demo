name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MAVEN_CLI_OPTS: "-B -DskipTests"

jobs:
  maven_install:
    environment: dev
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'
        cache: maven
    - name: Build with Maven
      run: mvn ${{ env.MAVEN_CLI_OPTS }} -DAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -DAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -DDOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }} -DCI_COMMIT_SHA=${{ github.sha }} install

  deploy-dev:
    needs: maven_install
    environment: dev
    runs-on: ubuntu-latest
    env:
      API_STACK_CDK_NAME: TestingStack
      API_STACK_NAME: dev-backend-service-test
      API_ENVIRONMENT: dev
      AWS_REGION: eu-central-1

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: infrastructure/package-lock.json
      - run: npm i -D esbuild
      - run: cd infrastructure
      - run: npm ci
      - run: npm run cdk --deploy ${{ env.API_STACK_CDK_NAME }} --context environment=${{ env.API_ENVIRONMENT }} --require-approval never --parameters ${{ env.API_STACK_NAME }}:ImageTag=${{ github.sha }}

