<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jkube</groupId>
				<artifactId>kubernetes-maven-plugin</artifactId>
				<version>1.17.0</version>
				<configuration>
					<images>
						<image>
							<name>rbdms-dev/backend:${CI_COMMIT_SHA}</name>
							<alias>rbdms-image</alias>
							<build>
								<from>docker.io/amazoncorretto:22</from>
								<ports>
									<port>8088/tcp</port>
									<port>8089/tcp</port>
								</ports>
								<workdir>/maven</workdir>
								<user>operator</user>
								<assembly>
									<layers>
										<layer>
											<files>
<!--												<file>-->
<!--													<source>${project.basedir}/target/${project.artifactId}-${project.version}.jar</source>-->
<!--													<outputDirectory>.</outputDirectory>-->
<!--												</file>-->
<!--												<file>-->
<!--													<source>${project.basedir}/src/main/resources/cert/Amazon_RDS_eu_central_1_Root_CA_ECC384_G1.cer</source>-->
<!--													<outputDirectory>.</outputDirectory>&lt;!&ndash; Path to your certificate &ndash;&gt;-->
<!--												</file>-->
<!--												<file>-->
<!--													<source>${project.basedir}/src/main/resources/cert/Amazon_RDS_eu_central_1_Root_CA_RSA2048_G1.cer</source>-->
<!--													<outputDirectory>.</outputDirectory>&lt;!&ndash; Path to your certificate &ndash;&gt;-->
<!--												</file>-->
<!--												<file>-->
<!--													<source>${project.basedir}/src/main/resources/cert/Amazon_RDS_eu_central_1_Root_CA_RSA4096_G1.cer</source>-->
<!--													<outputDirectory>.</outputDirectory>&lt;!&ndash; Path to your certificate &ndash;&gt;-->
<!--												</file>-->
											</files>
										</layer>
									</layers>
								</assembly>
								<runCmds>
<!--									<run>keytool -importcert -trustcacerts -cacerts -file /maven/Amazon_RDS_eu_central_1_Root_CA_ECC384_G1.cer -alias Amazon_RDS_eu_central_1_Root_CA_ECC384_G1 -storepass changeit -noprompt</run>-->
<!--									<run>keytool -importcert -trustcacerts -cacerts -file /maven/Amazon_RDS_eu_central_1_Root_CA_RSA2048_G1.cer -alias Amazon_RDS_eu_central_1_Root_CA_RSA2048_G1 -storepass changeit -noprompt</run>-->
<!--									<run>keytool -importcert -trustcacerts -cacerts -file /maven/Amazon_RDS_eu_central_1_Root_CA_RSA4096_G1.cer -alias Amazon_RDS_eu_central_1_Root_CA_RSA4096_G1 -storepass changeit -noprompt</run>-->
								</runCmds>
								<entryPoint>
									<shell>java -jar /maven/${project.artifactId}-${project.version}.jar</shell>
								</entryPoint>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>push</id>
						<phase>install</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<authConfig>
								<username>${AWS_ACCESS_KEY_ID}</username>
								<password>${AWS_SECRET_ACCESS_KEY}</password>
							</authConfig>
							<pushRegistry>${DOCKER_REGISTRY}</pushRegistry>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
